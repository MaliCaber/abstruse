syntax = "proto3";
package api;
option go_package = ".;api";

import "google/protobuf/empty.proto";

service API {
  rpc Connect(google.protobuf.Empty) returns (HostInfo) {}
  rpc Usage(stream google.protobuf.Empty) returns (stream UsageStats) {}
  rpc StartJob(Job) returns (stream JobResp) {}
  rpc StopJob(Job) returns (JobStopResp) {}
}

message HostInfo {
  string id = 1;
  string addr = 2;
  string hostname = 3;
  uint64 uptime = 4;
  uint64 bootTime = 5;
  uint64 procs = 6;
  string os = 7;
  string platform = 8;
  string platformFamily = 9;
  string platformVersion = 10;
  string kernelVersion = 11;
  string kernelArch = 12;
  string virtualizationSystem = 13;
  string virtualizationRole = 14;
  string hostID = 15;
  uint64 maxParallel = 16;
}

message UsageStats {
  int32 cpu = 1;
  int32 mem = 2;
}

message Job {
  enum JobAction {
    JobStart = 0;
    JobStop = 1;
  }
  uint64 id = 1;
  uint64 buildId = 2;
  string name = 3;
  string commands = 4;
  string image = 5;
  string env = 6;
  string url = 7;
  string providerName = 8;
  string providerURL = 9;
  string providerToken = 10;
  string ref = 11;
  string commitSHA = 12;
  string repoName = 13;
  repeated string log = 14;
  string status = 15;
  string workerId = 16;
  JobAction action = 17;
}

message JobResp {
  enum JobStatus {
    StatusUnknown = 0;
    StatusQueued = 1;
    StatusRunning = 2;
    StatusPassing = 3;
    StatusFailing = 4;
  }

  enum JobRespType {
    Log = 0;
    Done = 1;
  }

  uint64 id = 1;
  bytes content = 2;
  JobStatus status = 3;
  JobRespType type = 4;
}

message JobStopResp {
  bool stopped = 1;
}
